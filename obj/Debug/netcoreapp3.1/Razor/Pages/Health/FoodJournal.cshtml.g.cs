#pragma checksum "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d98284aa4c7db83dd132f38ea47a309264902492"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(EDP_Project.Pages.Health.Pages_Health_FoodJournal), @"mvc.1.0.razor-page", @"/Pages/Health/FoodJournal.cshtml")]
namespace EDP_Project.Pages.Health
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\_ViewImports.cshtml"
using EDP_Project;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d98284aa4c7db83dd132f38ea47a309264902492", @"/Pages/Health/FoodJournal.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"998634860f44dea60736173b5c33d0d16ee27270", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Health_FoodJournal : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
  
    ViewData["Title"] = "Health Tracking - Your Food Journal";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>My Food Journal</h1>
<br />

<div>
    <a href=""#AddSection"" data-toggle=""collapse"" class=""btn btn-info btn-lg""><i class=""fas fa-plus""></i> Add record to journal</a>
    <br />
    <div class=""collapse card"" id=""AddSection"">
        <table class=""table table-borderless"" id=""health-addFood-table"">
            <tr>
                <td>
                    <h5>Date</h5>
                    <input type=""date""");
            BeginWriteAttribute("value", " value=\"", 553, "\"", 561, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""form-control"" id=""health-addFood-date"" />
                </td>
                <td colspan=""3""></td>
            </tr>
            <tr class=""addFood-tr"">
                <td class=""align-top"" style=""width: 30%""><h5>Breakfast</h5></td>
                <td id=""health-addFood-table-td2"" style=""width: 40%"">
                    <div class=""health-addFood-inputGroup"" id=""addSection-Breakfast"">
                        <div class=""dropdown health-addFood-nameInput"">
                            <div class=""health-addFood-input"">
                                <div class=""form-control health-addFood-displayInput"" onclick=""OpenOptions(this)"" style=""margin-bottom: 1%;""></div>
                                <input type=""text"" class=""form-control foodId-field"" hidden readonly />
                                <div class=""health-addFood-selectList dropdown-menu"" style=""display:none;"">
");
#nullable restore
#line 31 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                     foreach (var food in Model.AllFood)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"dropdown-item\" onclick=\"AddFood(this);\">\r\n                                            ");
#nullable restore
#line 34 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                       Write(food.FoodName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" <span hidden>");
#nullable restore
#line 34 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                                                   Write(food.FoodId);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                        </div>\r\n");
#nullable restore
#line 36 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                </div>
                            </div>
                        </div>
                    </div>

                    <button class=""btn btn-outline-info"" onclick=""AddInput(1)"" style=""margin-bottom: 2%;""><i class=""fas fa-plus-circle""></i> Add another food</button>
                    <p>Calories: <span class=""health-addFood-calories-span"">0</span></p>
                </td>
                <td style=""width: 10%"">
                    <input type=""number"" value=""1"" class=""form-control health-addFood-quantity"" style=""margin-bottom: 5%;""/>
                </td>
                <td style=""width: 20%"">
                    <button class=""btn text-secondary"" style=""margin-bottom: 2.5%;"" disabled><i class=""far fa-times-circle""></i></button>
                </td>
            </tr>
            <tr class=""addFood-tr"">
                <td class=""align-top"" style=""width: 30%""><h5>Lunch</h5></td>
                <td id=""health-addFood-table-td2"" style=""width: 40%"">
       ");
            WriteLiteral(@"             <div class=""health-addFood-inputGroup"" id=""addSection-Lunch"">
                        <div class=""dropdown health-addFood-nameInput"">
                            <div class=""health-addFood-input"">
                                <div class=""form-control health-addFood-displayInput"" onclick=""OpenOptions(this)"" style=""margin-bottom: 1%;""></div>
                                <input type=""text"" class=""form-control foodId-field"" hidden readonly />
                                <div class=""health-addFood-selectList dropdown-menu"" style=""display:none;"">
");
#nullable restore
#line 61 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                     foreach (var food in Model.AllFood)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"dropdown-item\" onclick=\"AddFood(this);\">\r\n                                            ");
#nullable restore
#line 64 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                       Write(food.FoodName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" <span hidden>");
#nullable restore
#line 64 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                                                   Write(food.FoodId);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                        </div>\r\n");
#nullable restore
#line 66 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                </div>
                            </div>
                        </div>
                    </div>

                    <button class=""btn btn-outline-info"" onclick=""AddInput(2)"" style=""margin-bottom: 2%;""><i class=""fas fa-plus-circle""></i> Add another food</button>
                    <p>Calories: <span class=""health-addFood-calories-span"">0</span></p>
                </td>
                <td style=""width: 10%"">
                    <input type=""number"" value=""1"" class=""form-control health-addFood-quantity"" style=""margin-bottom: 5%;""/>
                </td>
                <td style=""width: 20%"">
                    <button class=""btn text-secondary"" style=""margin-bottom: 2.5%;"" disabled><i class=""far fa-times-circle""></i></button>
                </td>
            </tr>
            <tr class=""addFood-tr"">
                <td class=""align-top"" style=""width: 30%""><h5>Dinner</h5></td>
                <td id=""health-addFood-table-td2"" style=""width: 40%"">
      ");
            WriteLiteral(@"              <div class=""health-addFood-inputGroup"" id=""addSection-Dinner"">
                        <div class=""dropdown health-addFood-nameInput"">
                            <div class=""health-addFood-input"">
                                <div class=""form-control health-addFood-displayInput"" onclick=""OpenOptions(this)"" style=""margin-bottom: 1%;""></div>
                                <input type=""text"" class=""form-control foodId-field"" hidden readonly />
                                <div class=""health-addFood-selectList dropdown-menu"" style=""display:none;"">
");
#nullable restore
#line 91 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                     foreach (var food in Model.AllFood)
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <div class=\"dropdown-item\" onclick=\"AddFood(this);\">\r\n                                            ");
#nullable restore
#line 94 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                       Write(food.FoodName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" <span hidden>");
#nullable restore
#line 94 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                                                   Write(food.FoodId);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                                        </div>\r\n");
#nullable restore
#line 96 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                </div>
                            </div>
                        </div>
                    </div>

                    <button class=""btn btn-outline-info"" onclick=""AddInput(3)"" style=""margin-bottom: 2%;""><i class=""fas fa-plus-circle""></i> Add another food</button>
                    <p>Calories: <span class=""health-addFood-calories-span"">0</span></p>
                </td>
                <td style=""width: 10%"">
                    <input type=""number"" value=""1"" class=""form-control health-addFood-quantity"" style=""margin-bottom: 5%;""/>
                </td>
                <td style=""width: 20%"">
                    <button class=""btn text-secondary"" style=""margin-bottom: 2.5%;"" disabled><i class=""far fa-times-circle""></i></button>
                </td>
            </tr>
            <tr>
                <td></td>
                <td><h6>Net calories intake: <span id=""health-addFood-totalCalories"">0</span></h6></td>
                <td colspan=""2"">
         ");
            WriteLiteral(@"           <div class=""float-right"">
                        <a href=""#AddSection"" data-toggle=""collapse"" class=""btn btn-secondary"">Cancel</a>
                        <input type=""submit"" value=""Add record"" class=""btn btn-info"" />
                    </div>
                </td>
            </tr>
        </table>
        <table id=""foodCaloriesTable"" hidden>
");
#nullable restore
#line 124 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
             foreach (var food in Model.AllFood)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <tr>\r\n                    <td>");
#nullable restore
#line 127 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                   Write(food.FoodId);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                    <td>");
#nullable restore
#line 128 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
                   Write(food.Calories);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                </tr>\r\n");
#nullable restore
#line 130 "C:\Users\exwhy\Documents\sem2\EDP\assignment\Pages\Health\FoodJournal.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </table>
    </div>
</div>
<br />

<div>
    <table class=""table table-bordered"">
        <tr>
            <td>

            </td>
        </tr>
    </table>
</div>

<script>
    var dropdownCooldown = false;

    function OpenOptions(inp) {
        dropdownCooldown = true;
        inp.parentElement.getElementsByClassName(""health-addFood-selectList"")[0].style.display = ""block"";
        setTimeout(function () { dropdownCooldown = false; }, 126)
    }

    function AddInput(number) {
        var inputGroup = document.getElementsByClassName(""health-addFood-inputGroup"")[number - 1];

        var foodNameInputDiv = document.querySelector("".health-addFood-nameInput"").cloneNode(true);
        foodNameInputDiv.querySelector("".health-addFood-displayInput"").innerText = """";
        var foodIdInput = foodNameInputDiv.querySelector("".foodId-field"");
        foodIdInput.readonly = false;
        foodIdInput.value = """";
        foodIdInput.readonly = true;
        inputGroup.appendCh");
            WriteLiteral(@"ild(foodNameInputDiv);
        
        var td = document.getElementsByClassName(""addFood-tr"")[number - 1].getElementsByTagName(""td"");
        var quantityInput = document.querySelector("".health-addFood-quantity"").cloneNode(true);
        quantityInput.value = 1;
        td[2].appendChild(quantityInput);
        td[3].innerHTML +=
            `<br />
            <button class=""btn text-primary"" onclick=""RemoveInput(this)"" style=""margin-bottom: 2.5%;""><i class=""far fa-times-circle""></i></button>`;
    }

    function RemoveInput(button) {
        var tr = button.parentElement.parentElement;
        var allButtons = button.parentElement.querySelectorAll(""button"");
        for (var i in allButtons) {
            if (allButtons[i] === button) {
                console.log(tr.getElementsByClassName(""health-addFood-nameInput""));

                console.log(i);
                console.log(allButtons);
                tr.getElementsByClassName(""health-addFood-nameInput"").item(i).remove();
      ");
            WriteLiteral(@"          tr.getElementsByClassName(""health-addFood-quantity"").item(i).remove();
                button.remove();
                break;
            }
        }
    }

    function AddFood(div) {
        var group = div.parentElement.parentElement;
        // Update name field
        group.getElementsByClassName(""health-addFood-displayInput"")[0].innerText = div.innerText;

        var idField = group.getElementsByTagName(""input"")[0]
        idField.readonly = false;
        idField.value = div.getElementsByTagName(""span"")[0].innerText;
        idField.readonly = true;
        div.parentElement.style.display = ""none"";
    }

    function ListenersInterrupt() {
        // Listening for change in aria-expanded
        var foodCalories = {};

        function UpdateCalories() {
            var totalCalories = {
                ""addSection-Breakfast"" : 0,
                ""addSection-Lunch"" : 0,
                ""addSection-Dinner"" : 0
            };

            var allInputs = docume");
            WriteLiteral(@"nt.getElementsByClassName(""foodId-field"");
            var allQuantity = document.getElementsByClassName(""health-addFood-quantity"");
            for (var i in allInputs) {
                var foodId = allInputs[i].value;
                
                if (foodId) {
                    var inputSectionId = allInputs.item(i).parentElement.parentElement.parentElement.id;
                    totalCalories[inputSectionId] += foodCalories[allInputs[i].value] * allQuantity[i].value;
                }

            }

            var netCalories = 0;
            for (var id in totalCalories) {
                document.getElementById(id).parentElement.parentElement.querySelector("".health-addFood-calories-span"").innerText = totalCalories[id];
                netCalories += totalCalories[id];
            }
            document.querySelector(""#health-addFood-totalCalories"").innerText = netCalories;

        }

        function InitFunctions() {
            // Set calories values object
           ");
            WriteLiteral(@" var foodCaloriesTable = document.querySelector(""#foodCaloriesTable"");
            var allTr = foodCaloriesTable.querySelectorAll(""tr"");
            for (var i in allTr) {
                var allTd = allTr.item(i).querySelectorAll(""td"");
                foodCalories[allTd[0].innerText] = parseInt(allTd[1].innerText);
            }
            foodCaloriesTable.remove();

            // Default date for new journal record
            Date.prototype.toDateInputValue = (function () {
                var local = new Date(this);
                local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
                return local.toJSON().slice(0, 10);
            });
            document.getElementById('health-addFood-date').value = new Date().toDateInputValue();

            console.log(foodCalories);
        }

        InitFunctions()
        setInterval(function () {
            var addSectionExpanded = document.querySelector(""#AddSection"").classList.contains(""show"");

            ");
            WriteLiteral(@"// listening for change in input fields
            if (addSectionExpanded) {
                UpdateCalories();
            }
        }, 500);
    }

    window.addEventListener('load', function () {
        document.addEventListener('click', function (event) {
            if (!dropdownCooldown) {
                const allTabs = document.getElementsByClassName(""health-addFood-selectList"");
                console.log(allTabs);
                for (var tab in allTabs) {
                    allTabs.item(tab).style.display = 'none';
                }
            }

        });
        ListenersInterrupt();
    });

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EDP_Project.Pages.Health.FoodJournalModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<EDP_Project.Pages.Health.FoodJournalModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<EDP_Project.Pages.Health.FoodJournalModel>)PageContext?.ViewData;
        public EDP_Project.Pages.Health.FoodJournalModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
