@page
@model EDP_Project.Pages.FoodListModel
@{
    ViewData["Title"] = "Food List";
}
<link href="https://unpkg.com/bootstrap-table@1.19.1/dist/bootstrap-table.min.css" rel="stylesheet">
<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.19.1/dist/bootstrap-table.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.19.1/dist/extensions/custom-view/bootstrap-table-custom-view.js"></script>

<h1>Health Tracking - Food Records</h1>
<br />
<div class="row">
    <a asp-page="AddFood" class="btn btn-primary" style="margin-bottom:2%;"><i class="fas fa-plus-circle"></i> Add new food</a>
</div>
<br />

<div class="" id="LMTab">
    <div class="toolbar">
        <select id="selectFilter" class="form-control" name="filterAlgorithm" onchange="getFilter(this)">
            <option value="All" selected>All categories</option>
            <option value="Light Meal">Light Meals</option>
            <option value="Heavy Meal">Heavy Meals</option>
            <option value="Drink">Drinks</option>
            <option value="Snack">Snacks</option>
        </select>
    </div>
    <table id="table"
           data-search="true"
           data-pagination="true"
           data-page-size="6"
           data-show-fullscreen="true">
        <thead>
            <tr>
                <th data-field="foodId" data-sortable="true">Id</th>
                <th data-field="foodName" data-sortable="true">Name</th>
                <th data-field="category" data-sortable="true">Category</th>
                <th data-field="calories" data-sortable="true">Calories</th>
            </tr>
        </thead>
    </table>
</div>

<script>
    //var category = document.getElementById("CategoryFilter").value;
    //var search = document.getElementById("SearchBar").value

    var select = document.getElementById('selectFilter');
    var dataDict = @Html.Raw(Json.Serialize(Model.AllFood));
    console.log(dataDict);

    var values = [];
    for (var i = 0; i < dataDict.length; i++) {
        var obj = dataDict[i];

        var opt = document.createElement('option');
        opt.value = obj.category;
        opt.innerHTML = obj.category;
        if (values.includes(obj.category) == false) {
            select.appendChild(opt);
            values.push(obj.category)
        }

    }

    var $table = $('#table')
    $(function () {
        var data = dataDict
        $table.bootstrapTable({ data: data })
    })

    function getFilter(selectObject) {
        var value = selectObject.value;
        console.log(values);
        if (value == "All") {
            $table.bootstrapTable('filterBy', {
                category: values
            })
        }
        else {

            $table.bootstrapTable('filterBy', {
                category: value
            })
        }
    }

    //while (true) {
    //    setTimeout(function () {

    //    }, 1000)
    //}
</script>

