@page "{id}"
@model EDP_Project.Pages.Staff.Blog.EditModel
@{
    ViewData["Title"] = "Update Blog";
}
<form method="post">
    <h1 class="text-center">Update Blog</h1>
    @if (!String.IsNullOrEmpty(Model.ErrorMsg))
    {
        <p class="alert alert-danger">@Model.ErrorMsg</p>
    }
    <input type="number" asp-for="BlogModel.Id" hidden readonly required />
    <div class="form-group">
        <label for="title">Title</label>
        <input class="form-control" asp-for="BlogModel.Title" id="title" required />
        <span asp-validation-for="BlogModel.Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <input class="form-control" asp-for="BlogModel.Category" id="category" required />
        <span asp-validation-for="BlogModel.Category" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label for="header">Header</label>
        <input class="form-control" asp-for="BlogModel.Header" required />
        <span asp-validation-for="BlogModel.Header" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="content">Content</label>
        <textarea class="form-control" asp-for="BlogModel.Content" id="content" rows="3"></textarea>
        <span asp-validation-for="BlogModel.Content" class="text-danger"></span>
    </div>

    <a asp-page="Dashboard" class="btn btn-secondary">Cancel</a>
    <input class="btn btn-success float-right" type="submit" value="Update" />
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}