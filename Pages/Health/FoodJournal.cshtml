@page
@model EDP_Project.Pages.Health.FoodJournalModel
@{
    ViewData["Title"] = "Health Tracking - Your Food Journal";
}
<link href="https://unpkg.com/bootstrap-table@1.19.1/dist/bootstrap-table.min.css" rel="stylesheet">
<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.19.1/dist/bootstrap-table.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.19.1/dist/extensions/custom-view/bootstrap-table-custom-view.js"></script>

<h1>My Food Journal</h1>
@if (!Model.RecordExists)
{
    <h5>You have yet to add your record for today. </h5>
    <a href="#AddSection" data-toggle="collapse" class="btn btn-info btn-lg"><i class="fas fa-plus"></i> Add record to journal</a>
}
else
{
    <div class="card">
        <h4>Today's record</h4>
        @{ string[] mealTypes = { "Breakfast", "Lunch", "Dinner" };}
        @foreach (var type in mealTypes)
        {
            <div>
                <h5>@type</h5>
                <ol class="health-todayRecord-li">
                    @foreach (var meal in Model.TodayRecord.Where(x => x.MealType == type))
                    {
                        <li>
                            @meal.FoodDetails.FoodName
                            @if (meal.Quantity > 1)
                            {
                                <span>x @meal.Quantity</span>
                            }
                        </li>
                    }
                </ol>
            </div>
        }

        <div class="row ml-auto" style="padding:15px 30px;">
            <div class="float-right col-xs-6">
                <a href="#EditSection" data-toggle="collapse" class="btn btn-warning"><i class="far fa-edit"></i></a>
            </div>
            <div class="float-right col-xs-6">
                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#confirmDeleteRecord"><i class="fa fa-trash"></i></button>
                <!-- The Modal -->
                <div class="modal" id="confirmDeleteRecord">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Delete Confirmation</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                <p>Are you sure you want to reset today's record</p>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                <a asp-page="DeleteFoodRecord" asp-route-userId="@Model.MealsModel[0].UserId" class="btn btn-danger">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<br />

<div>
    <div asp-validation-summary="All"></div>
    <br />
    <div class="collapse card" id="AddSection">
        <form id="addFood-form" method="post">
            <table class="table table-borderless" id="health-addFood-table">
                <tr>
                    <td>
                        <h5>Date</h5>
                        <input type="date" asp-for="Date" class="form-control" id="health-addFood-date" />
                    </td>
                    <td colspan="3"></td>
                </tr>

                @for (var i = 0; i < Model.MealsModel.Count; i++)
                {
                    <tr class="addFood-tr">
                        <td class="align-top" style="width: 30%">
                            <h5>@Model.MealsModel[i].MealType</h5>
                        </td>
                        <td id="health-addFood-table-td2" style="width: 40%">
                            <div class="health-addFood-inputGroup" id="addSection-@Model.MealsModel[i].MealType">
                                <div class="dropdown health-addFood-nameInput">
                                    <div class="health-addFood-input">
                                        <div class="form-group">
                                            <label>Meal</label>
                                            <div class="form-control health-addFood-displayInput" onclick="OpenOptions(this); return false;" style="margin-bottom: 1%;; cursor: text;"></div>
                                        </div>

                                        <input type="text" asp-for="MealsModel[i].MealType" value="@Model.MealsModel[i].MealType" hidden readonly />
                                        <input type="text" asp-for="MealsModel[i].FoodId" class="form-control foodId-field" hidden readonly />
                                        <div class="health-addFood-selectList dropdown-menu" style="display:none;">
                                            @foreach (var food in Model.AllFood)
                                            {
                                                <div class="dropdown-item" onclick="AddFood(this);" style="cursor:pointer;">
                                                    @food.FoodName <span hidden>@food.FoodId</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button class="btn btn-outline-info" onclick="AddInput(@i+1); return false;" style="margin-bottom: 2%;"><i class="fas fa-plus-circle"></i> Add another food</button>
                            <p>Calories: <span class="health-addFood-calories-span">0</span></p>
                        </td>
                        <td style="width: 10%">
                            <div class="form-group health-addFood-quantity">
                                <label>Quantity</label>
                                <input type="number" asp-for="MealsModel[i].Quantity" value="1" min="0" class="form-control addFood-quantity-input" style="margin-bottom: 5%;" />
                            </div>
                        </td>
                        <td style="width: 20%">
                            <div style="margin-top: 32px;"></div>
                            <button class="btn text-secondary" style="margin-bottom: 2.5%;" disabled><i class="far fa-times-circle"></i></button>
                        </td>
                    </tr>
                }

                <tr>
                    <td></td>
                    <td><h5>Net calories intake: <span id="health-addFood-totalCalories">0</span></h5></td>
                    <td colspan="2">
                        <div class="float-right">
                            <a href="#EditSection" data-toggle="collapse" class="btn btn-secondary">Cancel</a>
                            <input type="submit" value="Add record" class="btn btn-info" />
                        </div>
                    </td>
                </tr>
            </table>


            <table id="foodCaloriesTable" hidden>
                @foreach (var food in Model.AllFood)
                {
                    <tr>
                        <td>@food.FoodId</td>
                        <td>@food.Calories</td>
                    </tr>
                }
            </table>
        </form>
    </div>
    <div class="collapse card" id="EditSection">
        <form id="addFood-form" method="post">
            <table class="table table-borderless" id="health-addFood-table">
                <tr>
                    <td>
                        <h5>Date</h5>
                        <input type="date" asp-for="Date" class="form-control" id="health-addFood-date" value="@Model.Date" />
                    </td>
                    <td colspan="3"></td>
                </tr>

                @for (var i = 0; i < Model.MealsModel.Count; i++)
                {
                    <tr class="addFood-tr">
                        <td class="align-top" style="width: 30%">
                            <h5>@Model.MealsModel[i].MealType</h5>
                        </td>
                        <td id="health-addFood-table-td2" style="width: 40%">
                            <div class="health-addFood-inputGroup" id="addSection-@Model.MealsModel[i].MealType">
                                @{ var currentMeal = Model.TodayRecord.Where(x => x.MealType == Model.MealsModel[i].MealType).ToList(); }
                                @for (var j = 0; j < currentMeal.Count; j++)
                                {
                                    <div class="dropdown health-addFood-nameInput">
                                        <div class="health-addFood-input">
                                            <div class="form-group">
                                                @if (j == 0)
                                                {
                                                    <label>Meal</label>
                                                }

                                                <div class="form-control health-addFood-displayInput" onclick="OpenOptions(this); return false;" style="margin-bottom: 1%;cursor: text;">@currentMeal[j].FoodDetails.FoodName</div>
                                            </div>

                                            <input type="text" asp-for="MealsModel[i].MealType" value="@Model.MealsModel[i].MealType" hidden readonly />
                                            <input type="text" asp-for="MealsModel[i].FoodId" value="@currentMeal[j].FoodId" class="form-control foodId-field" hidden readonly />
                                            <div class="health-addFood-selectList dropdown-menu" style="display:none;">
                                                @foreach (var food in Model.AllFood)
                                                {
                                                    <div class="dropdown-item" onclick="AddFood(this);" style="cursor:pointer;">
                                                        @food.FoodName <span hidden>@food.FoodId</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }

                            </div>

                            <button class="btn btn-outline-info" onclick="AddInput(@i+1); return false;" style="margin-bottom: 2%;"><i class="fas fa-plus-circle"></i> Add another food</button>
                            <p>Calories: <span class="health-addFood-calories-span">0</span></p>
                        </td>
                        <td style="width: 10%">
                            @for (var j = 0; j < currentMeal.Count; j++)
                            {
                                <div class="form-group health-addFood-quantity">
                                    @if (j == 0)
                                    {
                                        <label>Quantity</label>
                                    }
                                    <input type="number" asp-for="MealsModel[i].Quantity" value="@currentMeal[j].Quantity" min="0" class="form-control addFood-quantity-input" style="margin-bottom: 5%;" />
                                </div>
                            }

                        </td>
                        <td style="width: 20%">
                            <div style="margin-top: 32px;"></div>
                            @for (var j = 0; j < currentMeal.Count; j++)
                            {
                                if (j > 0)
                                {
                                    <br />
                                }
                                <button class="btn text-primary" style="margin-bottom: 2.5%;"><i class="far fa-times-circle"></i></button>
                            }
                        </td>
                    </tr>
                }

                <tr>
                    <td></td>
                    <td><h5>Net calories intake: <span id="health-addFood-totalCalories">0</span></h5></td>
                    <td colspan="2">
                        <div class="float-right">
                            <a href="#AddSection" data-toggle="collapse" class="btn btn-secondary">Cancel</a>
                            <input type="submit" value="Add record" class="btn btn-info" />
                        </div>
                    </td>
                </tr>
            </table>


            <table id="foodCaloriesTable" hidden>
                @foreach (var food in Model.AllFood)
                {
                    <tr>
                        <td>@food.FoodId</td>
                        <td>@food.Calories</td>
                    </tr>
                }
            </table>
        </form>
    </div>
</div>
<br />

<div id="tempRecordExistsVal">@Model.RecordExists</div>

<div>
    <div class="col-4">
        <div class="toolbar">
            <select id="selectFilter" class="form-control" name="filterAlgorithm" onchange="getFilter(this)">
                <option value="All" selected>All</option>
            </select>
        </div>
    </div>
    <table id="table"
           data-search="true"
           data-pagination="true"
           data-page-size="6"
           data-show-fullscreen="true">
        <thead>
            <tr>
                <th data-field="date" data-sortable="true">Date</th>
                <th data-field="foodDetails.foodName" data-sortable="true">Category</th>
                <th data-field="mealType" data-sortable="true">Category</th>
                <th data-field="quantity" data-sortable="true">Content</th>
            </tr>
        </thead>
    </table>
</div>

<script>
    var dropdownCooldown = false;

    var select = document.getElementById('selectFilter');
    var dataDict = @Html.Raw(Json.Serialize(Model.AllRecord));
    console.log(dataDict);

    var values = [];
    for (var i = 0; i < dataDict.length; i++) {
        var obj = dataDict[i];

        var opt = document.createElement('option');
        opt.value = obj.category;
        opt.innerHTML = obj.category;
        if (values.includes(obj.category) == false) {
            select.appendChild(opt);
            values.push(obj.category)
        }

    }

    var $table = $('#table')
    $(function () {
        var data = dataDict
        $table.bootstrapTable({ data: data })
    })

    function OpenOptions(inp) {
        dropdownCooldown = true;
        inp.parentElement.parentElement.getElementsByClassName("health-addFood-selectList")[0].style.display = "block";
        setTimeout(function () { dropdownCooldown = false; }, 126)
    }

    function AddInput(number) {
        var inputGroup = document.getElementsByClassName("health-addFood-inputGroup")[number - 1];

        var foodNameInputDiv = inputGroup.querySelector(".health-addFood-nameInput").cloneNode(true);
        foodNameInputDiv.querySelector(".health-addFood-displayInput").innerText = "";
        foodNameInputDiv.querySelector("label").remove();

        var allFields = foodNameInputDiv.querySelectorAll("input");

        var foodIdInput = foodNameInputDiv.querySelector(".foodId-field");
        foodIdInput.readonly = false;
        foodIdInput.value = "";
        foodIdInput.readonly = true;
        inputGroup.appendChild(foodNameInputDiv);

        var td = document.getElementsByClassName("addFood-tr")[number - 1].getElementsByTagName("td");
        var quantityInput = document.querySelector(".health-addFood-quantity").cloneNode(true);
        quantityInput.querySelector("label").remove();
        quantityInput.value = 1;
        td[2].appendChild(quantityInput);
        td[3].innerHTML +=
            `<br />
            <button class="btn text-primary" onclick="RemoveInput(this); return false;" style="margin-bottom: 2.5%;margin-top: 11px;"><i class="far fa-times-circle"></i></button>`;
    }

    function RemoveInput(button) {
        var tr = button.parentElement.parentElement;
        var allButtons = button.parentElement.querySelectorAll("button");
        for (var i in allButtons) {
            if (allButtons[i] === button) {
                console.log(tr.getElementsByClassName("health-addFood-nameInput"));

                console.log(i);
                console.log(allButtons);
                tr.getElementsByClassName("health-addFood-nameInput").item(i).remove();
                tr.getElementsByClassName("health-addFood-quantity").item(i).remove();
                button.remove();
                break;
            }
        }
    }

    function AddFood(div) {
        var group = div.parentElement.parentElement;
        // Update name field
        group.getElementsByClassName("health-addFood-displayInput")[0].innerText = div.innerText;

        var idField = group.getElementsByTagName("input")[1]
        idField.readonly = false;
        idField.value = div.getElementsByTagName("span")[0].innerText;
        idField.readonly = true;
        div.parentElement.style.display = "none";
    }

    function ListenersInterrupt() {
        // Listening for change in aria-expanded
        var foodCalories = {}; //Table of foodId: Calories

        function UpdateCalories() {
            var totalCalories = {
                "addSection-Breakfast": 0,
                "addSection-Lunch": 0,
                "addSection-Dinner": 0
            };

            var allInputs = document.getElementsByClassName("foodId-field");
            var allQuantity = document.getElementsByClassName("health-addFood-quantity");


            for (var i = 0; i < allInputs.length; i++) {
                var foodId = allInputs.item(i).value;

                if (foodId > 0) {
                    var inputSectionId = allInputs.item(i).parentElement.parentElement.parentElement.id;
                    totalCalories[inputSectionId] += foodCalories[allInputs.item(i).value] * allQuantity.item(i).querySelector("input").value;

                }

            }

            var netCalories = 0;
            for (var id in totalCalories) {
                document.getElementById(id).parentElement.parentElement.querySelector(".health-addFood-calories-span").innerText = totalCalories[id];
                netCalories += totalCalories[id];
            }
            document.querySelector("#health-addFood-totalCalories").innerText = netCalories;

        }

        function InitFunctions() {
            // Set calories values object
            var foodCaloriesTable = document.querySelector("#foodCaloriesTable");
            var allTr = foodCaloriesTable.querySelectorAll("tr");
            for (var i in allTr) {
                var allTd = allTr.item(i).querySelectorAll("td");
                foodCalories[allTd[0].innerText] = parseInt(allTd[1].innerText);
            }
            foodCaloriesTable.remove();

            // Set the correct form
            var recordExistsString = document.querySelector("#tempRecordExistsVal").innerText.toLowerCase()
            var recordExists = recordExistsString == "true";

            document.querySelector("#tempRecordExistsVal").remove();
            console.log(recordExists)
            if (recordExists) {
                document.querySelector("#AddSection").remove()
            }
            else {
                document.querySelector("#EditSection").remove()
            }
        }

        InitFunctions()
        setInterval(function () {
            var addSection = document.querySelector("#AddSection")
            if (!addSection) {
                addSection = document.querySelector("#EditSection")
            }
            var addSectionExpanded = addSection.classList.contains("show");

            // listening for change in input fields
            if (addSectionExpanded) {
                UpdateCalories();
            }
        }, 500);
    }

    document.querySelector("#addFood-form").addEventListener("submit", function (e) {
        var allInpGrp = document.getElementsByClassName("health-addFood-nameInput");
        var quantities = document.getElementsByClassName("addFood-quantity-input")
        var count = 0

        for (var i in allInpGrp) {
            var inputs = allInpGrp[i].querySelectorAll("input");
            quantities.item(i).name = `MealsModel[${i}].Quantity`;
            quantities.item(i).id = `MealsModel_${i}__Quantity`;

            if (inputs.item(0).value.length > 0) {
                inputs.item(0).name = `MealsModel[${i}].MealType`;
                inputs.item(0).id = `MealsModel_${i}__MealType`;
                inputs.item(1).name = `MealsModel[${i}].FoodId`;
                inputs.item(1).id = `MealsModel_${i}__FoodId`;
                count++;
            }

        }
    })

    window.addEventListener('load', function () {
        document.addEventListener('click', function (event) {
            if (event.target.getAttribute("type") != "submit") {
                event.preventDefault();
                if (!dropdownCooldown) {
                    const allTabs = document.getElementsByClassName("health-addFood-selectList");
                    console.log(allTabs);
                    for (var tab in allTabs) {
                        allTabs.item(tab).style.display = 'none';
                    }
                }
            }

        });
        ListenersInterrupt();
    });

</script>